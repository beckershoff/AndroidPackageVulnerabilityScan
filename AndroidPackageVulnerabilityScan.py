import requests
import time

def check_vulnerabilities(apps, api_key):
    base_url = 'https://services.nvd.nist.gov/rest/json/cves/1.0'
    headers = {'User-Agent': 'Mozilla/5.0', 'api_key': api_key}
    total_apps = len(apps)
    processed_apps = 0
    start_time = time.time()

    print('Checking vulnerabilities...')
    for app in apps:
        query = f'cpe:/a:{app}'
        url = f'{base_url}?cpeMatchString={query}&addOns={app}'
        response = requests.get(url, headers=headers)

        if response.status_code == 200:
            data = response.json()
            cve_entries = data.get('result', {}).get('CVE_Items', [])

            if cve_entries:
                print(f'Vulnerabilities found for {app}:')
                for entry in cve_entries:
                    cve_id = entry.get('cve', {}).get('CVE_data_meta', {}).get('ID')
                    print(f'- {cve_id}')
            else:
                print(f'No vulnerabilities found for {app}')
        else:
            print(f'Error checking vulnerabilities for {app}. Status code: {response.status_code}')

        processed_apps += 1
        progress = processed_apps / total_apps * 100
        elapsed_time = time.time() - start_time
        eta = (elapsed_time / processed_apps) * (total_apps - processed_apps)
        
        print(f'Progress: {progress:.2f}%')
        print(f'Elapsed Time: {elapsed_time:.2f} seconds')
        print(f'Estimated Time Remaining: {eta:.2f} seconds')
        
        if processed_apps < total_apps:
            print('Waiting for 6 seconds...')
            time.sleep(6)

# Provide your NIST NVD API key
api_key = 'your-api-key-here'

# List of apps to check for vulnerabilities
apps = [
    'abdelrahman.wifianalyzerpro',
    'android',
    'android.auto_generated_rro_product__',
    # Add more apps here
]

try:
    check_vulnerabilities(apps, api_key)
except Exception as e:
    print(f'An error occurred: {str(e)}')
